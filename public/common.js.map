{"version":3,"sources":["webpack:///./src/app/main/content/apps/site/site.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAA2C;AACO;AAclD;IAKE,qBAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;IAAI,CAAC;IACvC;;;QAGI;IACH,8BAAQ,GAAR;QAAA,iBAQC;QANG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC;iBAC1B,SAAS,CAAC,UAAC,QAAa;gBACrB,OAAO,CAAC,QAAQ,CAAC,CAAC;YACtB,CAAC,EAAE,MAAM,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAEF,gCAAU,GAAV;QAAA,iBAQC;QANG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,oBAAoB,CAAC;iBAC9B,SAAS,CAAC,UAAC,QAAa;gBACrB,OAAO,CAAC,QAAQ,CAAC,CAAC;YACtB,CAAC,EAAE,MAAM,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,8BAAQ,GAAR;QAAA,iBAQC;QANG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC;iBAC1B,SAAS,CAAC,UAAC,QAAa;gBACrB,OAAO,CAAC,QAAQ,CAAC,CAAC;YACtB,CAAC,EAAE,MAAM,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IACA,6BAAO,GAAP,UAAQ,KAA6B,EAAE,KAA0B;QAAjE,iBAkBC;QAhBG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,OAAO,CAAC,GAAG,CAAC;gBACR,KAAI,CAAC,QAAQ,EAAE;gBACf,KAAI,CAAC,UAAU,EAAE;gBACjB,KAAI,CAAC,QAAQ,EAAE;aAClB,CAAC,CAAC,IAAI,CACH,UAAC,EAAqB;oBAApB,aAAK,EAAC,eAAO,EAAC,aAAK;gBACjB,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC,oBAAmB;gBACtC,KAAI,CAAC,OAAO,GAAC,OAAO,CAAC;gBACrB,KAAI,CAAC,KAAK,GAAC,KAAK,CAAC;gBACjB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC;gBACxB,OAAO,EAAE,CAAC;YACd,CAAC,EACD,MAAM,CACT,CAAC;QACN,CAAC,CAAC,CAAC;IACP,CAAC;IAzDQ,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAMyB,+DAAU;OALxB,WAAW,CA0DvB;IAAD,kBAAC;CAAA;AA1DuB","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\n\nimport { FuseUtils } from '@fuse/utils';\n\nimport { from } from 'rxjs/observable/from';\nimport { filter } from 'rxjs/operators';\nimport { map } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SiteService implements Resolve<any>\n{\nsites:any[];\nhazards:any[];\ntests:any[];\n  constructor(private http:HttpClient) { }\n   /**\n     * Get Contacts\n     * @returns {Promise<any>}\n     */\n    getSites(): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n            this.http.get('api/site-sites')\n                .subscribe((response: any) => {\n                    resolve(response);\n                }, reject);\n        });\n    }\n \n   getHazards(): Promise<any>\n   {\n       return new Promise((resolve, reject) => {\n           this.http.get('api/hazard-hazards')\n               .subscribe((response: any) => {\n                   resolve(response);\n               }, reject);\n       });\n   }\n\n   getTests(): Promise<any>\n   {\n       return new Promise((resolve, reject) => {\n           this.http.get('api/test-tests')\n               .subscribe((response: any) => {\n                   resolve(response);\n               }, reject);\n       });\n   }\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\n    {\n        return new Promise((resolve, reject) => {\n            Promise.all([\n                this.getSites(),\n                this.getHazards(),\n                this.getTests()\n            ]).then(\n                ([sites,hazards,tests]) => {\n                    this.sites = sites;// sites.subscribe;\n                    this.hazards=hazards;\n                    this.tests=tests;\n                    console.log(this.sites);\n                    resolve();\n                },\n                reject\n            );\n        });\n    }\n}\n"],"sourceRoot":""}